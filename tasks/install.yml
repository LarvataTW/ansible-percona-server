---
# tasks file for percona-server
- name: configure debconf
  debconf:
    name: "{{ item.name }}"
    question: "{{ item.question }}"
    value: "{{ item.value }}"
    vtype: "{{ item.vtype }}"
  with_items: percona_server_debconf_selections
  tags: [configuration, percona-server, percona-server-dependencies]

- name: install dependencies
  apt:
    name: "{{ item }}"
    state: latest
  with_items: percona_server_dependencies
  when: percona_server_dependencies
  tags: [configuration, percona-server, percona-server-dependencies]

- name: install
  apt:
    name: "{{ item }}"
    state: latest
  with_items: percona_server_install
  when: percona_server_install
  tags: [configuration, percona-server, percona-server-install]

- name: copy certificate files
  copy:
    src: "{{ item.value.src }}"
    dest: "{{ item.value.dest }}"
    owner: "{{ item.value.owner | default('root') }}"
    group: "{{ item.value.group | default('mysql') }}"
    mode: "{{ item.value.mode | default('0640') }}"
  with_dict: percona_server_ssl_map
  when: percona_server_ssl_map
  notify: restart percona-server
  tags: [configuration, percona-server, percona-server-configuration]

- name: update configuration file
  template:
    src: etc/mysql/my.cnf.j2
    dest: /etc/mysql/my.cnf
    owner: root
    group: root
    mode: 0644
  notify: restart percona-server
  tags: [configuration, percona-server, percona-server-configuration]

- name: start and enable service
  service:
    name: mysql
    state: started
    enabled: yes
  tags: [configuration, percona-server, percona-server-start-enable-service]

- name: create .my.cnf file
  template:
    src: root/.my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: 0600
  tags: [configuration, percona-server, percona-server-my-cnf]
